@using Microsoft.AspNetCore.Mvc.Localization
@using System.Globalization;
@using System.Collections.Generic
@using TrainingNet.Models.Views
@inject IViewLocalizer Localizer
@model MovieGenreViewModel
@{
    ViewData["Title"] = Localizer["Movie"];
}

<h2>@Localizer["Movie"]</h2>

<p>
    <a asp-area="" asp-controller="Movie" asp-action="Create">@(Localizer["Create"].Value) @(Localizer["Movie"].Value)</a>
</p>
<form asp-controller="Movie" asp-action="Index" method="get">
    <p>
        <select name="currentGenre" asp-items="Model.GenresList" asp-for="CurrentGenre">
            <option value="">@Localizer["All"].Value</option>
        </select>
        <input type="text" name="SearchString" />
        <input type="submit" value="@Localizer["Filter"]" />
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-controller="Movie" asp-action="Index" asp-route-sortOrder="@ViewData["TitleSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(m => m.MoviesList[0].Title)</a>
            </th>
            <th>
                <a asp-controller="Movie" asp-action="Index" asp-route-sortOrder="@ViewData["GenreSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(m => m.MoviesList[0].Genre)</a>
            </th>
            <th>
                <a asp-controller="Movie" asp-action="Index" asp-route-sortOrder="@ViewData["DateSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(m => m.MoviesList[0].ReleaseDate)</a>
            </th>
            <th>
                <a asp-controller="Movie" asp-action="Index" asp-route-sortOrder="@ViewData["PriceSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(m => m.MoviesList[0].Price)</a>
            </th>
            <th>
                <a asp-controller="Movie" asp-action="Index" asp-route-sortOrder="@ViewData["RatingSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(m => m.MoviesList[0].Rating)</a>
            </th>
            <th>
                <a asp-controller="Movie" asp-action="Index" asp-route-sortOrder="@ViewData["RatingSort"]">@Html.DisplayNameFor(m => m.MoviesList[0].Rating)</a>
            </th>
            <th>
                <a asp-controller="Movie" asp-action="Index" asp-route-sortOrder="@ViewData["RatingSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(m => m.MoviesList[0].Rating)</a>
            </th>
            <th>
                <a asp-controller="Movie" asp-action="Index" asp-route-sortOrder="@ViewData["RatingSort"]">@Html.DisplayNameFor(m => m.MoviesList[0].Rating)</a>
            </th>
            <th>@(Localizer["Options"].Value)</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.MoviesList) 
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReleaseDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rating)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">@(Localizer["Edit"].Value)</a> 
                    <a asp-action="Delete" asp-route-id="@item.Id">@(Localizer["Delete"].Value)</a> 
                    <a asp-action="Details" asp-route-id="@item.Id">@(Localizer["Details"].Value)</a>
                    @Html.ActionLink(Localizer["SendMail"].Value, "SendMovieMail", "Movie", new { id=item.Id }, null)
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.MoviesList.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.MoviesList.HasNextPage ? "disabled" : "";
}

<a  asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]"
    asp-route-currentGenre="@Model.CurrentGenre"
    asp-route-page="@(Model.MoviesList.PageIndex - 1)"
    asp-route-currentFilter="@ViewData["CurrentFilter"]"
    class="btn btn-default @prevDisabled">
    @(Localizer["Previous"].Value)
</a>
<a  asp-action="Index"
    asp-route-sortOrder="@ViewData["CurrentSort"]"
    asp-route-currentGenre="@Model.CurrentGenre"
    asp-route-page="@(Model.MoviesList.PageIndex + 1)"
    asp-route-currentFilter="@ViewData["CurrentFilter"]"
    class="btn btn-default @nextDisabled">
    @(Localizer["Next"].Value)
</a>
